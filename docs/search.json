[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/bigtencfbavgplays/index.html",
    "href": "posts/bigtencfbavgplays/index.html",
    "title": "Big Ten College Football average plays",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nCode\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n\n\nCode\nlogs24 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nRows: 1717 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nlogs25 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs25.csv\")\n\n\nRows: 711 Columns: 77\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): Location, Opponent, Result, OT, TeamURL, Outcome, Team, Conferenc...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nlogs_big10_24 &lt;- logs24 |&gt; \n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\nlogs_big10_25 &lt;- logs25 |&gt; \n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\navg_plays_24 &lt;- logs_big10_24 |&gt; \n  group_by(Team) |&gt; \n  summarise(avg_plays = mean(TotalPlays))\n\n\n\n\nCode\navg_plays_25 &lt;- logs_big10_25 |&gt; \n  group_by(Team) |&gt; \n  summarise(avg_plays = mean(TotalPlays))\n\n\nTo start, I used ggplot() with the 2025 dataset (avg_plays_25) to create a bar chart, mapping Team to the x-axis and avg_plays to the y-axis, then reordered the teams by average plays. I styled the chart with geom_col(fill = “red”), added axis labels, and used coord_flip() to make the teams readable along the vertical axis. I repeated the same process for the 2024 dataset (avg_plays_24), this time filling the bars blue to distinguish the seasons.\n\n\nCode\nggplot(avg_plays_24, aes(x = reorder(Team, avg_plays), y = avg_plays)) + \n  geom_col(fill = \"blue\") + \n  scale_y_continuous(labels = comma) + \n  labs(\n    title = \"More plays don't equate to success, as seen by the 4-8 Terps\", \n    x = \"Team\", \n    y = \"Average Plays in 2024\"\n  ) + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(avg_plays_25, aes(x = reorder(Team, avg_plays), y = avg_plays)) + \n  geom_col(fill = \"red\") + \n  scale_y_continuous(labels = comma) + \n  labs(\n    title = \"Maryland averages the fifth-most offensive plays with a freshman QB\", \n    x = \"Team\", \n    y = \"Average Plays in 2025\"\n  ) + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\nThe 2025 chart shows Maryland averaging the fifth-most offensive plays, suggesting tempo has remained a key part of its strategy under a new quarterback. In contrast, the 2024 chart highlights that more offensive plays didn’t always translate to wins, as Maryland still finished 4–8 despite ranking high in tempo. Across the two years, the overall distribution indicates Big Ten teams are running slightly fewer plays on average in 2025 compared to 2024. A notable shift is that Rutgers and Indiana moved upward in the rankings this season, while teams like Purdue and Iowa have fallen further behind.\nThe biggest takeaway is that pace alone doesn’t guarantee success — it must be paired with efficiency and execution."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/firstpost/index.html",
    "href": "posts/firstpost/index.html",
    "title": "Why do students go at halftime?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nIt was halftime at SECU Stadium, and nobody was around."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sportsblog",
    "section": "",
    "text": "Third and Six: Does Maryland run the ball more than average?\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2025\n\n\nMichael Howes\n\n\n\n\n\n\n\n\n\n\n\n\nHow Maryland Scores: Aces, blocks, kills and errors by the numbers\n\n\n\n\n\n\n\n\n\n\n\nOct 20, 2025\n\n\nMichael Howes\n\n\n\n\n\n\n\n\n\n\n\n\nBig Ten College Football average plays\n\n\n\n\n\n\n\n\n\n\n\nOct 16, 2025\n\n\nMichael Howes\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 9, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWhy do students go at halftime?\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 9, 2025\n\n\nMichael Howes\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 6, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025BigTenVolleyball/index.html",
    "href": "posts/2025BigTenVolleyball/index.html",
    "title": "How Maryland Scores: Aces, blocks, kills and errors by the numbers",
    "section": "",
    "text": "I first had to load the tidyverse and waffle libraries so R could read the data, summarize it and create the waffle charts.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nCode\nlibrary(waffle)\n\n\n\n\nCode\nmatch_data &lt;- read_csv(\"ncaa_womens_volleyball_matchstats_2025.csv\")\n\n\nRows: 5360 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): team, opponent, home_away, result\ndbl  (33): ncaa_id, team_score, opponent_score, s, kills, errors, total_atta...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nI next loaded the volleyball match data, filtered it for Maryland, calculated the team’s total stats and stored those totals in a simple named vector called md.\n\n\nCode\nmaryland_data &lt;- match_data |&gt;\n  filter(team == \"Maryland\")\n\n\n\n\nCode\nmd &lt;- maryland_data|&gt;\n  summarise(\n    total_kills = sum(kills),\n    total_blocks = sum(block_solos + (block_assists / 2)),\n    total_aces = sum(aces),\n    opponent_errors = sum(defensive_errors)\n  )\n\nmd\n\n\n# A tibble: 1 × 4\n  total_kills total_blocks total_aces opponent_errors\n        &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;\n1         574         136.         73             298\n\n\n\n\nCode\nmd &lt;- c(\n  Kills = 574,\n  Blocks = 135.5,\n  Aces = 73,\n  OpponentErrors = 298\n)\n\n\n\n\nCode\nmd\n\n\n         Kills         Blocks           Aces OpponentErrors \n         574.0          135.5           73.0          298.0 \n\n\nI created a waffle chart showing Maryland’s point breakdown, scaling the totals for display and using different colors for each category.\n\n\nCode\nwaffle(md / 25,\n       rows = 10,\n       title = \"Maryland's points\",\n       xlab = \"1 square = 1 point\",\n       colors = c(\"red\", \"black\", \"yellow\", \"grey\"))\n\n\n\n\n\n\n\n\n\nI filtered the data for Wisconsin, calculated its total stats and saved those values in a named vector called wi.\n\n\nCode\nwisconsin_data &lt;- match_data |&gt;\n  filter(team == \"Wisconsin\")\n\n\n\n\nCode\nwi_totals &lt;- wisconsin_data |&gt;\n  summarise(\n    total_kills = sum(kills),\n    total_blocks = sum(block_solos + (block_assists / 2)),\n    total_aces = sum(aces),\n    opponent_errors = sum(defensive_errors)\n  )\n\n\n\n\nCode\nwi_totals\n\n\n# A tibble: 1 × 4\n  total_kills total_blocks total_aces opponent_errors\n        &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;\n1         756          147         75             291\n\n\n\n\nCode\nwi &lt;- c(\n  Kills = 756,\n  Blocks = 147,\n  Aces = 75,\n  OpponentErrors = 291\n)\n\n\nI combined Maryland’s and Wisconsin’s waffle charts side by side to compare their point distributions.\n\n\nCode\niron(\n  waffle(md / 25,\n         rows = 10,\n         title = \"Maryland's points\",\n         xlab = \"1 square = 1 point\",\n         colors = c(\"red\", \"black\", \"yellow\", \"grey\")),\n  waffle(wi / 25,\n         rows = 10,\n         title = \"Wisconsin's points\",\n         xlab = \"1 square = 1 point\",\n         colors = c(\"red\", \"black\", \"gray\", \"darkred\"))\n)\n\n\n\n\n\n\n\n\n\nMaryland’s point distribution shows a more balanced mix across categories, with kills making up the largest share but a notable contribution from opponent errors as well. Wisconsin relies more heavily on kills and blocks, indicating a stronger offensive presence at the net. Maryland earns a greater portion of its points from serving and opponent mistakes, while Wisconsin’s totals suggest it creates more of its own scoring opportunities through attack efficiency and front-row play."
  },
  {
    "objectID": "posts/ThirdAndSix/index.html",
    "href": "posts/ThirdAndSix/index.html",
    "title": "Third and Six: Does Maryland run the ball more than average?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nCode\nlibrary(cfbfastR)\n\n\nI filtered the play-by-play data to include only 3rd-and-6 plays from the 2021–2025 seasons, then grouped them by play type to count how often each type occurred.\nThis shows which kinds of plays teams most commonly call in that specific down-and-distance situation.\n\n\nCode\npbp &lt;- load_cfb_pbp(seasons = 2021:2025)\n\n\n\n\nCode\nthird_and_six &lt;- pbp |&gt;\n  filter(down == 3, distance == 6)\n\n\n\n\nCode\nplay_type_counts &lt;- third_and_six |&gt;\n  group_by(play_type) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\n\n\n\nCode\nplay_type_counts\n\n\n# A tibble: 23 × 2\n   play_type                  count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Pass Reception              4985\n 2 Pass Incompletion           3982\n 3 Rush                        3362\n 4 Penalty                     1126\n 5 Timeout                      967\n 6 Sack                         817\n 7 Passing Touchdown            523\n 8 Interception Return          256\n 9 Rushing Touchdown            146\n10 Fumble Recovery (Opponent)    95\n# ℹ 13 more rows\n\n\nMost 3rd-and-6 plays are passing attempts, with nearly 5,000 pass completions and about 4,000 incompletions, compared to around 3,300 rushing plays.\nThat means teams across college football clearly prefer to throw the ball on 3rd-and-6, although a meaningful share still choose to run in that situation.\n\n\nCode\nrun_summary &lt;- third_and_six |&gt;\n  mutate(is_run = play_type == \"Rush\") |&gt;\n  summarize(\n    total_plays = n(),\n    total_runs = sum(is_run),\n    pct_runs = (total_runs / total_plays) * 100,\n    avg_yards_gained = mean(yards_gained)\n  )\n\nrun_summary\n\n\n# A tibble: 1 × 4\n  total_plays total_runs pct_runs avg_yards_gained\n        &lt;int&gt;      &lt;int&gt;    &lt;dbl&gt;            &lt;dbl&gt;\n1       16447       3362     20.4             5.30\n\n\nI calculated how often teams ran the ball on 3rd-and-6 plays and the average yards gained on those plays.\nTeams ran the ball on about 20% of 3rd-and-6 plays, gaining an average of roughly 5.3 yards per rush, showing that while runs are less common, they can still be moderately effective.\n\n\nCode\nthird_and_six_runs_by_team &lt;- third_and_six |&gt;\n filter(play_type == \"Rush\" | play_type == \"Run\" | play_type == \"Rushing Play\") |&gt;\n  group_by(season, offense_play) |&gt;\n  summarize(runs = n(), .groups = \"drop\") |&gt;\n  arrange(desc(runs))\n\nthird_and_six_runs_by_team\n\n\n# A tibble: 1,107 × 3\n   season offense_play    runs\n    &lt;int&gt; &lt;chr&gt;          &lt;int&gt;\n 1   2021 Army              16\n 2   2022 Navy              16\n 3   2021 Baylor            13\n 4   2024 Davidson          13\n 5   2022 Kennesaw State    12\n 6   2023 Air Force         12\n 7   2023 South Florida     12\n 8   2021 Arkansas          10\n 9   2021 Kent State        10\n10   2021 Louisiana         10\n# ℹ 1,097 more rows\n\n\nI filtered for rushing plays on 3rd-and-6, grouped them by team and season, and counted how many times each team ran in that situation.Teams like Army and Navy led the nation in 3rd-and-6 rushing attempts, reflecting their strong reliance on run-heavy offensive systems.\n\n\nCode\nmd_third_and_six_runs &lt;- third_and_six |&gt;\n  filter(offense_play == \"Maryland\",\n         play_type == \"Rush\" | play_type == \"Run\" | play_type == \"Rushing Play\") |&gt;\n  group_by(season) |&gt;\n  summarize(runs = n()) |&gt;\n  arrange(season)\n\nmd_third_and_six_runs\n\n\n# A tibble: 5 × 2\n  season  runs\n   &lt;int&gt; &lt;int&gt;\n1   2021     4\n2   2022     6\n3   2023     4\n4   2024     2\n5   2025     1\n\n\nI filtered for Maryland’s rushing plays on 3rd-and-6, grouped them by season, and counted how many times the team ran in that situation each year.\nMaryland’s 3rd-and-6 rushing attempts have declined steadily since 2023, dropping from four runs that season to just two in 2024 and one so far in 2025.That pattern suggests that after Maryland’s Illinois loss in 2023 — when conservative play-calling was questioned — Mike Locksley has leaned even more toward passing in medium-yardage spots, trusting his quarterbacks over the run game on critical downs.\n\n\nCode\nmd_play_type_counts &lt;- third_and_six |&gt;\n  filter(offense_play == \"Maryland\") |&gt;\n  group_by(play_type) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\nmd_play_type_counts\n\n\n# A tibble: 12 × 2\n   play_type                  count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Pass Reception                27\n 2 Pass Incompletion             18\n 3 Rush                          17\n 4 Penalty                        6\n 5 Sack                           4\n 6 Timeout                        4\n 7 Passing Touchdown              2\n 8 Field Goal Good                1\n 9 Fumble Recovery (Opponent)     1\n10 Fumble Return Touchdown        1\n11 Interception Return            1\n12 Rushing Touchdown              1\n\n\nI filtered the data for Maryland’s 3rd-and-6 plays, grouped them by play type, and counted how many times each type occurred. Most of Maryland’s 3rd-and-6 plays were passes — with 27 completions and 18 incompletions compared to only 17 runs — showing that Mike Locksley heavily favors the passing game in medium-yardage situations.\n\n\nCode\ncfb_play_type_counts &lt;- third_and_six |&gt;\n  filter(offense_play != \"Maryland\") |&gt;\n  group_by(play_type) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\ncfb_play_type_counts\n\n\n# A tibble: 23 × 2\n   play_type                  count\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Pass Reception              4958\n 2 Pass Incompletion           3964\n 3 Rush                        3345\n 4 Penalty                     1120\n 5 Timeout                      963\n 6 Sack                         813\n 7 Passing Touchdown            521\n 8 Interception Return          255\n 9 Rushing Touchdown            145\n10 Fumble Recovery (Opponent)    94\n# ℹ 13 more rows\n\n\n\n\nCode\nlibrary(waffle)\n\n\nI wanted to see how Maryland’s play-calling on 3rd-and-6 compared to the rest of college football to understand whether Mike Locksley’s approach was more balanced or predictable in those crucial situations. By visualizing the run-pass split, I could see if Maryland leans more on its run game than most teams or follows the national trend of passing in medium-yardage downs.\n\n\nCode\nmd &lt;-c(\"Passing\" = 25, \"Rushing\" = 17)\ncfb &lt;- c(\"Passing\" = 8922, \"Rushing\" = 3345)\n\niron(\n  waffle(md,\n         rows = 10,\n         title = \"Maryland 3rd & 6 Play Types\",\n         xlab = \"1 square = 1 play\",\n         colors = c(\"red\", \"black\")\n  ),\n  waffle(cfb / 100, \n         rows = 10,\n         title = \"Rest of CFB 3rd & 6 Play Types\",\n         xlab = \"1 square = 100 plays\",\n         colors = c(\"orange\", \"blue\")\n  )\n)\n\n\n\n\n\n\n\n\n\nThis chart shows that Maryland runs the ball on 3rd-and-6 more often than most college teams, but still passes slightly more overall.\nIn the top waffle, Maryland’s passing and rushing squares are almost evenly split, while in the bottom waffle the rest of college football is overwhelmingly pass-heavy. That contrast suggests Maryland maintains a more balanced approach on 3rd-and-medium situations, while other programs tend to lean heavily on the passing game."
  }
]